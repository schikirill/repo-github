DROP DATABASE IF EXISTS PROJECTOR;
CREATE DATABASE PROJECTOR;
USE PROJECTOR;
------------------------------------------
DROP TABLE IF EXISTS FILM_STUDIOS;
CREATE TABLE FILM_STUDIOS (
	ID SERIAL PRIMARY KEY,
	FILM_STUDIO VARCHAR(50) UNIQUE NOT NULL );
  
DROP TABLE IF EXISTS COUNTRIES;
CREATE TABLE COUNTRIES (
	ID SERIAL PRIMARY KEY,
	COUNTRY VARCHAR(50) UNIQUE NOT NULL );

DROP TABLE IF EXISTS GENRES;
CREATE TABLE GENRES (
	ID SERIAL PRIMARY KEY,
	GENRE_ENG VARCHAR(50) UNIQUE NOT NULL,
  GENRE_RUS VARCHAR(50) UNIQUE NOT NULL );

DROP TABLE IF EXISTS AUTHORS;
CREATE TABLE AUTHORS (
	ID SERIAL PRIMARY KEY,
	AUTHOR VARCHAR(50) UNIQUE NOT NULL );
  
DROP TABLE IF EXISTS ACTORS;
CREATE TABLE ACTORS (
	ID SERIAL PRIMARY KEY,
	ACTOR VARCHAR(50) UNIQUE NOT NULL );
  
DROP TABLE IF EXISTS IMAGES;
CREATE TABLE IMAGES (
	ID SERIAL PRIMARY KEY,
	FILE_NAME VARCHAR(200) NOT NULL,
	FILE_PATH VARCHAR(200) NOT NULL );
  
DROP TABLE IF EXISTS FORUM;
CREATE TABLE FORUM (
	ID SERIAL PRIMARY KEY,
	SECTION VARCHAR(200) NOT NULL,
	TOPIC VARCHAR(200) NOT NULL,
  CREATED TIMESTAMP DEFAULT NOW() );
-----------------------------------------  
DROP TABLE IF EXISTS USERS;
CREATE TABLE USERS (
	ID SERIAL PRIMARY KEY,
	USER_NAME VARCHAR(50) UNIQUE,
	EMAIL VARCHAR(50) UNIQUE,
	PHONE_NUMBER VARCHAR(16) UNIQUE,
	REGISTERED TIMESTAMP DEFAULT NOW() );

DROP TABLE IF EXISTS USER_PROFILES;
CREATE TABLE USER_PROFILES (
	ID SERIAL PRIMARY KEY,
	USER_ID BIGINT UNSIGNED,
	FIRST_NAME VARCHAR(50) DEFAULT ' ',
	LAST_NAME VARCHAR(50) DEFAULT ' ',
	GENDER ENUM ('M', 'F', 'N/A') DEFAULT 'N/A',
	BIRTH_DAY DATE,
	AVATAR BIGINT UNSIGNED DEFAULT 1,
	COUNTRY_ID BIGINT UNSIGNED,
	ABOUT VARCHAR(350) DEFAULT ' ',
  SIGNATURE VARCHAR(200) DEFAULT ' ',
	UPDATED_AT TIMESTAMP DEFAULT NOW(),
  
	INDEX USER_NAME_IDX (FIRST_NAME, LAST_NAME),
  
	FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE RESTRICT ON UPDATE CASCADE,
	FOREIGN KEY (AVATAR) REFERENCES IMAGES (ID) ON DELETE SET NULL ON UPDATE CASCADE,
	FOREIGN KEY (COUNTRY_ID) REFERENCES COUNTRIES (ID) ON DELETE SET NULL ON UPDATE CASCADE );
  
DROP TABLE IF EXISTS PRIVATE_MESSAGES;
CREATE TABLE PRIVATE_MESSAGES (
	ID SERIAL PRIMARY KEY,
	FROM_USER BIGINT UNSIGNED,
	TO_USER BIGINT UNSIGNED,
	SEND_TIMESTAMP TIMESTAMP DEFAULT NOW(),
	BODY_TEXT TEXT NOT NULL,

	FOREIGN KEY (FROM_USER) REFERENCES USERS (ID) ON DELETE SET NULL ON UPDATE CASCADE,
	FOREIGN KEY (TO_USER) REFERENCES USERS (ID) ON DELETE SET NULL ON UPDATE CASCADE );
  
DROP TABLE IF EXISTS FORUM_MESSAGES;
CREATE TABLE FORUM_MESSAGES (
	ID SERIAL PRIMARY KEY,
	SECTION_ID BIGINT UNSIGNED,
	TOPIC_ID BIGINT UNSIGNED,
	SEND_TIMESTAMP TIMESTAMP DEFAULT NOW(),
	BODY_TEXT TEXT NOT NULL,

	FOREIGN KEY (SECTION_ID) REFERENCES FORUM (ID) ON DELETE SET NULL ON UPDATE CASCADE,
	FOREIGN KEY (TOPIC_ID) REFERENCES FORUM (ID) ON DELETE SET NULL ON UPDATE CASCADE );